{"version":3,"file":"builder-headers.js","sourceRoot":"","sources":["../../../../src/core/cell/source-chain/builder-headers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AACjD,OAAO,EAIL,UAAU,GAQX,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAEhD,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AACrC,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,aAAa,EAAE,MAAM,SAAS,CAAC;AAErE,MAAM,UAAU,QAAQ,CAAC,MAAc;IACrC,OAAO;QACL,MAAM,EAAE;YACN,OAAO,EAAE,MAAM;YACf,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;SACnB;QACD,SAAS,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;KAC/B,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,OAAa,EAAE,OAAoB;IAC1D,MAAM,GAAG,GAAQ;QACf,MAAM,EAAE,OAAO;QACf,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,GAAG,EAAE;QAChB,IAAI,EAAE,UAAU,CAAC,GAAG;KACrB,CAAC;IAEF,OAAO,GAAG,CAAC;AACb,CAAC;AAED,MAAM,UAAU,uBAAuB,CACrC,KAAgB,EAChB,cAAmB;IAEnB,MAAM,GAAG,GAAuB;QAC9B,GAAG,WAAW,CAAC,KAAK,CAAC;QACrB,cAAc;QACd,IAAI,EAAE,UAAU,CAAC,kBAAkB;KACpC,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC;AAED,MAAM,UAAU,WAAW,CACzB,KAAgB,EAChB,KAAY,EACZ,UAAqB;IAErB,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IAEpC,MAAM,MAAM,GAAW;QACrB,GAAG,WAAW,CAAC,KAAK,CAAC;QACrB,UAAU;QACV,UAAU;QACV,IAAI,EAAE,UAAU,CAAC,MAAM;KACxB,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,WAAW,CACzB,KAAgB,EAChB,KAAY,EACZ,UAAqB,EACrB,sBAA4B,EAC5B,uBAA6B;IAE7B,MAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IAEpC,MAAM,MAAM,GAAW;QACrB,GAAG,WAAW,CAAC,KAAK,CAAC;QACrB,UAAU;QACV,UAAU;QACV,sBAAsB;QACtB,uBAAuB;QAEvB,IAAI,EAAE,UAAU,CAAC,MAAM;KACxB,CAAC;IACF,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,cAAc;AAEd,SAAS,WAAW,CAAC,KAAgB;IACnC,MAAM,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;IAChC,MAAM,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC3C,MAAM,WAAW,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;IACzC,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC;IAExB,OAAO;QACL,MAAM;QACN,UAAU;QACV,WAAW;QACX,SAAS;KACV,CAAC;AACJ,CAAC","sourcesContent":["import { now } from '@holochain-open-dev/common';\nimport {\n  Hash,\n  AgentPubKey,\n  Dna,\n  HeaderType,\n  AgentValidationPkg,\n  Entry,\n  EntryType,\n  Create,\n  Update,\n  SignedHeaderHashed,\n  Header,\n} from '@holochain-open-dev/core-types';\nimport { hash } from '../../../processors/hash';\nimport { CellState } from '../state';\nimport { hashEntry } from '../utils';\nimport { getAuthor, getNextHeaderSeq, getTipOfChain } from './utils';\n\nexport function buildShh(header: Header): SignedHeaderHashed {\n  return {\n    header: {\n      content: header,\n      hash: hash(header),\n    },\n    signature: Uint8Array.from([]),\n  };\n}\n\nexport function buildDna(dnaHash: Hash, agentId: AgentPubKey): Dna {\n  const dna: Dna = {\n    author: agentId,\n    hash: dnaHash,\n    timestamp: now(),\n    type: HeaderType.Dna,\n  };\n\n  return dna;\n}\n\nexport function buildAgentValidationPkg(\n  state: CellState,\n  membrane_proof: any\n): AgentValidationPkg {\n  const pkg: AgentValidationPkg = {\n    ...buildCommon(state),\n    membrane_proof,\n    type: HeaderType.AgentValidationPkg,\n  };\n  return pkg;\n}\n\nexport function buildCreate(\n  state: CellState,\n  entry: Entry,\n  entry_type: EntryType\n): Create {\n  const entry_hash = hashEntry(entry);\n\n  const create: Create = {\n    ...buildCommon(state),\n    entry_hash,\n    entry_type,\n    type: HeaderType.Create,\n  };\n  return create;\n}\n\nexport function buildUpdate(\n  state: CellState,\n  entry: Entry,\n  entry_type: EntryType,\n  original_entry_address: Hash,\n  original_header_address: Hash\n): Update {\n  const entry_hash = hashEntry(entry);\n\n  const update: Update = {\n    ...buildCommon(state),\n    entry_hash,\n    entry_type,\n    original_entry_address,\n    original_header_address,\n\n    type: HeaderType.Update,\n  };\n  return update;\n}\n\n/** Helpers */\n\nfunction buildCommon(state: CellState) {\n  const author = getAuthor(state);\n  const header_seq = getNextHeaderSeq(state);\n  const prev_header = getTipOfChain(state);\n  const timestamp = now();\n\n  return {\n    author,\n    header_seq,\n    prev_header,\n    timestamp,\n  };\n}\n"]}
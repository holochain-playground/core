{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../src/core/hdk/actions.ts"],"names":[],"mappings":"AAOA,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAOtD,gEAAgE;AAChE,MAAM,CAAC,MAAM,YAAY,GAGrB,CAAC,UAAkB,EAAE,IAAU,EAAE,EAAE,CAAC,KAAK,EAAE,IAG9C,EAAiB,EAAE;IAClB,MAAM,KAAK,GAAU,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;IAClE,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;IAEnC,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,SAAS,CAC9D,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAChD,CAAC;IACF,IAAI,aAAa,GAAG,CAAC,EAAE;QACrB,MAAM,IAAI,KAAK,CACb,sBAAsB,IAAI,CAAC,YAAY,8BAA8B,CACtE,CAAC;KACH;IAED,MAAM,UAAU,GAAG;QACjB,GAAG,EAAE;YACH,EAAE,EAAE,aAAa;YACjB,OAAO,EAAE,UAAU;YACnB,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,UAAU;SACvE;KACF,CAAC;IAEF,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IAE1D,MAAM,OAAO,GAAY;QACvB,aAAa,EAAE,QAAQ,CAAC,MAAM,CAAC;QAC/B,KAAK;KACN,CAAC;IACF,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAEhC,OAAO,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC;AAC3C,CAAC,CAAC;AAEF,gEAAgE;AAChE;;;;;;;;;;;;GAYG","sourcesContent":["import {\n  Entry,\n  EntryType,\n  Element,\n  Hash,\n} from '@holochain-open-dev/core-types';\nimport { Cell } from '../cell';\nimport { buildCreate, buildShh } from '../cell/source-chain/builder-headers';\nimport { putElement } from '../cell/source-chain/put';\n\nexport type HostFunction<A, R> = (\n  zome_index: number,\n  cell: Cell\n) => (args: A) => Promise<R>;\n\n// Creates a new Create header and its entry in the source chain\nexport const create_entry: HostFunction<\n  { content: any; entry_def_id: string },\n  Hash\n> = (zome_index: number, cell: Cell) => async (args: {\n  content: any;\n  entry_def_id: string;\n}): Promise<Hash> => {\n  const entry: Entry = { entry_type: 'App', content: args.content };\n  const dna = cell.getSimulatedDna();\n\n  const entryDefIndex = dna.zomes[zome_index].entry_defs.findIndex(\n    entry_def => entry_def.id === args.entry_def_id\n  );\n  if (entryDefIndex < 0) {\n    throw new Error(\n      `Given entry def id ${args.entry_def_id} does not exist in this zome`\n    );\n  }\n\n  const entry_type = {\n    App: {\n      id: entryDefIndex,\n      zome_id: zome_index,\n      visibility: dna.zomes[zome_index].entry_defs[entryDefIndex].visibility,\n    },\n  };\n\n  const create = buildCreate(cell.state, entry, entry_type);\n\n  const element: Element = {\n    signed_header: buildShh(create),\n    entry,\n  };\n  putElement(element)(cell.state);\n\n  return element.signed_header.header.hash;\n};\n\n// Creates a new Create header and its entry in the source chain\n/* export const update = (entry: Entry, entry_type: EntryType, original_header_hash: Hash): HdkAction => (\n  state: CellState\n): Element => {\n  const create = buildUpdate(state, entry, entry_type, null, original_header_hash);\n\n  const element: Element = {\n    header: create,\n    maybe_entry: entry,\n  };\n\n  return element;\n};\n */\n"]}
{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../src/core/cell/source-chain/actions.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAe,MAAM,mBAAmB,CAAC;AAOvE,gEAAgE;AAChE,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,OAAY,EACZ,YAAoB,EACT,EAAE,CAAC,KAAK,EAAE,UAAkB,EAAE,IAAU,EAAoB,EAAE;IACzE,MAAM,KAAK,GAAU,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;IACpD,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;IAEnC,MAAM,aAAa,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,SAAS,CAC9D,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,KAAK,YAAY,CAC3C,CAAC;IACF,IAAI,aAAa,GAAG,CAAC,EAAE;QACrB,MAAM,IAAI,KAAK,CACb,sBAAsB,YAAY,8BAA8B,CACjE,CAAC;KACH;IAED,MAAM,UAAU,GAAG;QACjB,GAAG,EAAE;YACH,EAAE,EAAE,aAAa;YACjB,OAAO,EAAE,UAAU;YACnB,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,UAAU;SACvE;KACF,CAAC;IAEF,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IAE1D,MAAM,OAAO,GAAY;QACvB,aAAa,EAAE,QAAQ,CAAC,MAAM,CAAC;QAC/B,KAAK;KACN,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,gEAAgE;AAChE;;;;;;;;;;;;GAYG","sourcesContent":["import { Entry, EntryType, Element } from '@holochain-open-dev/core-types';\nimport { buildCreate, buildShh, buildUpdate } from './builder-headers';\nimport { CellState } from '../state';\nimport { hash } from '../../../processors/hash';\nimport { Cell } from '../../cell';\n\nexport type HdkAction = (zome_index: number, cell: Cell) => Promise<Element>;\n\n// Creates a new Create header and its entry in the source chain\nexport const create_entry = (\n  content: any,\n  entry_def_id: string\n): HdkAction => async (zome_index: number, cell: Cell): Promise<Element> => {\n  const entry: Entry = { entry_type: 'App', content };\n  const dna = cell.getSimulatedDna();\n\n  const entryDefIndex = dna.zomes[zome_index].entry_defs.findIndex(\n    entry_def => entry_def.id === entry_def_id\n  );\n  if (entryDefIndex < 0) {\n    throw new Error(\n      `Given entry def id ${entry_def_id} does not exist in this zome`\n    );\n  }\n\n  const entry_type = {\n    App: {\n      id: entryDefIndex,\n      zome_id: zome_index,\n      visibility: dna.zomes[zome_index].entry_defs[entryDefIndex].visibility,\n    },\n  };\n\n  const create = buildCreate(cell.state, entry, entry_type);\n\n  const element: Element = {\n    signed_header: buildShh(create),\n    entry,\n  };\n\n  return element;\n};\n\n// Creates a new Create header and its entry in the source chain\n/* export const update = (entry: Entry, entry_type: EntryType, original_header_hash: Hash): HdkAction => (\n  state: CellState\n): Element => {\n  const create = buildUpdate(state, entry, entry_type, null, original_header_hash);\n\n  const element: Element = {\n    header: create,\n    maybe_entry: entry,\n  };\n\n  return element;\n};\n */\n"]}
{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../../../src/core/cell/source-chain/actions.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAe,MAAM,mBAAmB,CAAC;AAMvE,gEAAgE;AAChE,MAAM,CAAC,MAAM,MAAM,GAAG,CACpB,KAAY,EACZ,UAAqB,EACV,EAAE,CAAC,KAAK,EAAE,KAAgB,EAAoB,EAAE;IAC3D,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IAErD,MAAM,OAAO,GAAY;QACvB,aAAa,EAAE,QAAQ,CAAC,MAAM,CAAC;QAC/B,KAAK;KACN,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,gEAAgE;AAChE;;;;;;;;;;;;GAYG","sourcesContent":["import { Entry, EntryType, Element } from '@holochain-open-dev/core-types';\nimport { buildCreate, buildShh, buildUpdate } from './builder-headers';\nimport { CellState } from '../state';\nimport { hash } from '../../../processors/hash';\n\nexport type HdkAction = (state: CellState) => Promise<Element>;\n\n// Creates a new Create header and its entry in the source chain\nexport const create = (\n  entry: Entry,\n  entry_type: EntryType\n): HdkAction => async (state: CellState): Promise<Element> => {\n  const create = buildCreate(state, entry, entry_type);\n\n  const element: Element = {\n    signed_header: buildShh(create),\n    entry,\n  };\n\n  return element;\n};\n\n// Creates a new Create header and its entry in the source chain\n/* export const update = (entry: Entry, entry_type: EntryType, original_header_hash: Hash): HdkAction => (\n  state: CellState\n): Element => {\n  const create = buildUpdate(state, entry, entry_type, null, original_header_hash);\n\n  const element: Element = {\n    header: create,\n    maybe_entry: entry,\n  };\n\n  return element;\n};\n */\n"]}
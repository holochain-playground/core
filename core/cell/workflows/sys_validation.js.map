{"version":3,"file":"sys_validation.js","sourceRoot":"","sources":["../../../../src/core/cell/workflows/sys_validation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAG7D,OAAO,EAAE,qBAAqB,EAAE,MAAM,UAAU,CAAC;AACjD,OAAO,EAAE,wBAAwB,EAAE,MAAM,YAAY,CAAC;AACtD,OAAO,EAAE,uBAAuB,EAAE,MAAM,YAAY,CAAC;AACrD,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAEvD,yHAAyH;AACzH,MAAM,CAAC,MAAM,cAAc,GAAG,KAAK,EAAE,IAAU,EAAiB,EAAE;IAChE,MAAM,aAAa,GAAG,wBAAwB,CAC5C,IAAI,CAAC,KAAK,EACV,qBAAqB,CAAC,OAAO,CAC9B,CAAC;IAEF,0BAA0B;IAC1B,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;QAClD,MAAM,UAAU,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;QAE5C,UAAU,CAAC,MAAM,GAAG,qBAAqB,CAAC,YAAY,CAAC;QAEvD,uBAAuB,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,CAAC;KACjE;IAED,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC;AAEF,MAAM,UAAU,mBAAmB,CAAC,IAAU;IAC5C,OAAO;QACL,IAAI,EAAE,iCAAiC;QACvC,WAAW,EAAE,uCAAuC;QACpD,IAAI,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC;KACjC,CAAC;AACJ,CAAC","sourcesContent":["import { deserializeHash } from '@holochain-open-dev/common';\nimport { Task } from '../../../executor/executor';\nimport { Cell } from '../../cell';\nimport { ValidationLimboStatus } from '../state';\nimport { getValidationLimboDhtOps } from '../dht/get';\nimport { putValidationLimboValue } from '../dht/put';\nimport { app_validation_task } from './app_validation';\n\n// From https://github.com/holochain/holochain/blob/develop/crates/holochain/src/core/workflow/sys_validation_workflow.rs\nexport const sys_validation = async (cell: Cell): Promise<void> => {\n  const pendingDhtOps = getValidationLimboDhtOps(\n    cell.state,\n    ValidationLimboStatus.Pending\n  );\n\n  // TODO: actually validate\n  for (const dhtOpHash of Object.keys(pendingDhtOps)) {\n    const limboValue = pendingDhtOps[dhtOpHash];\n\n    limboValue.status = ValidationLimboStatus.SysValidated;\n\n    putValidationLimboValue(deserializeHash(dhtOpHash), limboValue);\n  }\n\n  cell.triggerWorkflow(app_validation_task(cell));\n};\n\nexport function sys_validation_task(cell: Cell): Task<void> {\n  return {\n    name: 'System Validation of the DHT Op',\n    description: 'Subconscious checks of data integrity',\n    task: () => sys_validation(cell),\n  };\n}\n"]}